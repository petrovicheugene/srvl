//==========================================================
#include "ZNewDatabaseDialog.h"
#include "ZConstants.h"

#include <QVBoxLayout>
#include <QHBoxLayout>
#include <QGridLayout>
#include <QDialogButtonBox>

#include <QPushButton>
#include <QLineEdit>
#include <QLabel>

#include <QFileDialog>
#include <QSettings>
#include <QStandardPaths>
#include <QMessageBox>
//==========================================================
ZNewDatabaseDialog::ZNewDatabaseDialog(QWidget *parent) : QDialog(parent)
{
    zh_createComponents();
    zh_createConnections();
    zh_restoreSettings();
}
//==========================================================
ZNewDatabaseDialog::~ZNewDatabaseDialog()
{
    zh_saveSettings();
}
//==========================================================
void ZNewDatabaseDialog::zh_createComponents()
{
    // main layout
    QVBoxLayout* mainLayout = new QVBoxLayout(this);
    setLayout(mainLayout);

    QGridLayout* controlLayout = new QGridLayout(this);
    mainLayout->addLayout(controlLayout);

    // name level
    QLabel* label = new QLabel(this);
    label->setText(QString("<b>%1</b>").arg(tr("Name:")));
    controlLayout->addWidget(label, 0, 0, 1, 2);

    zv_nameLineEdit = new QLineEdit(this);
    controlLayout->addWidget(zv_nameLineEdit, 1, 0, 1, 1);

    // path level
    label = new QLabel(this);
    label->setText(QString("<b>%1</b>").arg(tr("Path:")));
    controlLayout->addWidget(label, 3, 0, 1, 2);

    zv_pathLineEdit = new QLineEdit(this);
    controlLayout->addWidget(zv_pathLineEdit, 4, 0, 1, 1);

    zv_browseButton = new QPushButton(this);
    zv_browseButton->setText(tr("Browse..."));
    controlLayout->addWidget(zv_browseButton, 4, 1, 1, 1);

    // buttons
    QFrame* line = new QFrame(this);
    line->setFrameStyle(QFrame::HLine | QFrame::Sunken);
    line->setLineWidth(1);
    mainLayout->addWidget(line);

    QDialogButtonBox* bottomButtonBox = new QDialogButtonBox(Qt::Horizontal, this);
    mainLayout->addWidget(bottomButtonBox);

    zv_okButton = new QPushButton(this);
    zv_okButton->setText(tr("Ok"));
    zv_okButton->setEnabled(false);
    bottomButtonBox->addButton(zv_okButton, QDialogButtonBox::ActionRole);

    zv_cancelButton = new QPushButton(this);
    zv_cancelButton->setText(tr("Cancel"));
    bottomButtonBox->addButton(zv_cancelButton, QDialogButtonBox::ActionRole);

}
//==========================================================
void ZNewDatabaseDialog::zh_createConnections()
{
    connect(zv_cancelButton, &QPushButton::clicked,
            this, &ZNewDatabaseDialog::reject);
    connect(zv_browseButton, &QPushButton::clicked,
            this, &ZNewDatabaseDialog::zh_onBrowseButtonClick);
    connect(zv_okButton, &QPushButton::clicked,
            this, &ZNewDatabaseDialog::accept);

    connect(zv_nameLineEdit, &QLineEdit::textChanged,
            this, &ZNewDatabaseDialog::zh_onLineEditTextChange);

}
//==========================================================
void ZNewDatabaseDialog::zh_restoreSettings()
{
    QSettings settings;
    settings.beginGroup(glAppVersion);
    settings.beginGroup("Start");

    QVariant vData = settings.value(zv_defaultDatabaseFolderSectionName);

    if(vData.isValid() && !vData.isNull() && vData.canConvert<QString>())
    {
        zv_databaseFolderPath = vData.toString();
    }
    else
    {
        QStringList standardLocations =
                QStandardPaths::standardLocations(QStandardPaths::DocumentsLocation);
        if(!standardLocations.isEmpty())
        {
            zv_databaseFolderPath = standardLocations.value(0);
        }
        else
        {
            zv_databaseFolderPath = QDir::currentPath();
        }

    }
    settings.endGroup();
    settings.endGroup();

}
//==========================================================
void ZNewDatabaseDialog::zh_saveSettings() const
{
    QSettings settings;
    settings.beginGroup(glAppVersion);
    settings.beginGroup("Start");
    settings.setValue(zv_defaultDatabaseFolderSectionName, QVariant(zv_databaseFolderPath));
    settings.endGroup();
    settings.endGroup();
}
//==========================================================
void ZNewDatabaseDialog::zh_onBrowseButtonClick()
{
    QString fileName = QFileDialog::getOpenFileName(this, tr("Select database file"),
                                                    zv_databaseFolderPath,
                                                    tr("sqlite database files(*.sqlite);;All files(*.*)"));
    if(fileName.isEmpty())
    {
        return;
    }

    zv_pathLineEdit->setText(fileName);
}
//==========================================================
void ZNewDatabaseDialog::zh_onLineEditTextChange()
{
    QFileInfo fi(zv_pathLineEdit->text());
    zv_okButton->setEnabled(fi.isFile() && fi.exists() && !zv_nameLineEdit->text().isEmpty());
}
//==========================================================
