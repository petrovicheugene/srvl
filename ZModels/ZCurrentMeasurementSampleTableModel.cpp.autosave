//==================================================================
#include "ZCurrentMeasurementSampleTableModel.h"
#include "ZSeriesTaskTreeModel.h"
//==================================================================
ZCurrentMeasurementSampleTableModel::ZCurrentMeasurementSampleTableModel(QObject *parent) : QAbstractTableModel(parent)
{
    
}
//==================================================================
Qt::ItemFlags	ZCurrentMeasurementSampleTableModel::flags(const QModelIndex & index) const
{
    Qt::ItemFlags flags;
    flags |= Qt::ItemIsEnabled | Qt::ItemIsEditable | Qt::ItemIsSelectable;
    return flags;
}
//==================================================================
QModelIndex ZCurrentMeasurementSampleTableModel::index(int row, int column, const QModelIndex &parent) const
{
    return createIndex(row, column);
}
//==================================================================
int ZCurrentMeasurementSampleTableModel::columnCount(const QModelIndex & parent) const
{
    return 2;
}
//==================================================================
int ZCurrentMeasurementSampleTableModel::rowCount(const QModelIndex & parent) const
{
        return 0;
}
//==================================================================
QVariant ZCurrentMeasurementSampleTableModel::data(const QModelIndex & index, int role) const
{
//    if(zv_manager == 0 || !index.isValid())
//    {
//        return QVariant();
//    }

//    if(role == Qt::DisplayRole)
//    {
//        if(index.column() == 0)
//        {
//            return QVariant(zv_manager->zp_sampleName(index.row()));
//        }

//        if(index.column() == 1)
//        {
//            return QVariant(zv_manager->zp_taskName(index.row()));
//        }
//    }

    return QVariant();
}
//==================================================================
bool	ZCurrentMeasurementSampleTableModel::setData(const QModelIndex & index, const QVariant & value, int role)
{

    return false;
}
//==================================================================
QVariant ZCurrentMeasurementSampleTableModel::headerData(int section, Qt::Orientation orientation, int role) const
{
    if(orientation == Qt::Vertical)
    {
        if(role == Qt::DisplayRole)
        {
            return QVariant(section + 1);
        }
    }
    else
    {
        if(role == Qt::DisplayRole)
        {
            if(section == 0)
            {
                return QVariant(tr("Name"));
            }
            else if(section == 1)
            {
                return QVariant(tr("Task"));
            }
//            else if(section == 2)
//            {
//                return QVariant("Name");
//            }
//            else if(section == 3)
//            {
//                return QVariant("Task");
//            }
//            else if(section == 4)
//            {
//                return QVariant("Operator");
//            }
        }

        return QVariant();
    }

    return QVariant();
}
//==================================================================
